# üîí ENVIRONMENT VARIABLES SECURITY GUIDE

## ‚ö†Ô∏è CRITICAL SECURITY WARNINGS

### NEVER COMMIT THESE FILES TO VERSION CONTROL:
- `.env.local` - Contains REAL credentials including:
  - Database passwords
  - API keys
  - Authentication secrets
  - Service role keys (admin access to Supabase!)

### FILES THAT ARE SAFE TO COMMIT:
- `.env` - Template with placeholder values
- `.env.example` - Example configuration
- This `.env.security` file - Security documentation

## üõ°Ô∏è SECURITY CHECKLIST

Before pushing to GitHub, ensure:

1. ‚úÖ `.env.local` is in `.gitignore`
2. ‚úÖ `.env.local` is NOT tracked by git: `git ls-files | grep .env.local` should be empty
3. ‚úÖ All placeholder values in `.env` are non-functional
4. ‚úÖ Real credentials are only in `.env.local`

## üîë CREDENTIAL TYPES IN THIS PROJECT

### Supabase Credentials (HIGHLY SENSITIVE)
- `DATABASE_URL` - PostgreSQL connection string with password
- `SUPABASE_SERVICE_ROLE_KEY` - **EXTREMELY SENSITIVE** - Admin access to entire project
- `NEXT_PUBLIC_SUPABASE_ANON_KEY` - Public key, still sensitive
- `NEXT_PUBLIC_SUPABASE_URL` - Project URL, moderately sensitive

### Authentication Secrets
- `AUTH_SECRET` - JWT signing key - MUST be 32+ characters, cryptographically secure

### Application URLs
- Generally safe but can reveal internal architecture

## üö® IF CREDENTIALS ARE COMPROMISED

1. **Immediately rotate all secrets:**
   - Supabase: Go to Settings > API and regenerate keys
   - AUTH_SECRET: Generate new secure random string
   - DATABASE_URL: Create new database user/password

2. **Check git history:** If secrets were ever committed, consider them permanently compromised

3. **Revoke access:** Deactivate old keys in all services

## üìã DEVELOPMENT SETUP

1. Copy `.env` to `.env.local`
2. Replace all placeholder values with real credentials
3. NEVER commit `.env.local`
4. Share credentials securely via encrypted channels, never via code

## üîç VERIFICATION COMMANDS

```bash
# Check what env files are tracked
git ls-files | grep .env

# Should only show: apps/web/.env.example, apps/web/.env.security
# Should NOT show: apps/web/.env, apps/web/.env.local

# Verify .env.local is ignored
git check-ignore apps/web/.env.local
```

Remember: Once secrets are in git history, they're permanently compromised!